{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ClinicaDentalVersionFinal\\\\Proyecto-Clinica-Dental\\\\donto-react\\\\src\\\\Components\\\\Scheduler\\\\scheduler.jsx\";\nimport React, { Component } from 'react';\nimport { Inject, ScheduleComponent, Day, Week, Month, ViewsDirective, ViewDirective } from '@syncfusion/ej2-react-schedule';\nimport { registerLicense } from '@syncfusion/ej2-base';\nregisterLicense('Ngo9BigBOggjHTQxAR8/V1NHaF5cXmVCf1JpRGJGfV5yd0VEalxXTnVfUj0eQnxTdEZiWH9acXBVQGNcVU1+Vw==');\nclass Scheduler extends Component {\n  constructor(props) {\n    super(props);\n    this.onPopupOpen = this.onPopupOpen.bind(this);\n  }\n  onPopupOpen(args) {\n    if (args.type === 'Editor' && !args.element.querySelector('.e-custom-btn')) {\n      const dialogObj = args.element['ej2_instances'][0];\n      let buttons = dialogObj.buttons;\n      buttons.unshift({\n        buttonModel: {\n          content: 'Convert',\n          isPrimary: false,\n          cssClass: 'e-custom-btn'\n        },\n        click: this.convertToVisit.bind(this, args)\n      });\n      dialogObj.setProperties({\n        buttons: buttons\n      });\n    }\n  }\n  convertToVisit(args) {\n    // Get the data from the event editor\n    const eventData = args.element.querySelector('.e-schedule-form').ej2_instances[0].RecurrenceRule();\n\n    // Display the data in the console in JSON format\n    console.log(JSON.stringify(eventData, null, 2));\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ScheduleComponent, {\n      popupOpen: this.onPopupOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ViewsDirective, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Week\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Inject, {\n      services: [Day, Week, Month],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })));\n  }\n}\nexport default Scheduler;","map":{"version":3,"names":["React","Component","Inject","ScheduleComponent","Day","Week","Month","ViewsDirective","ViewDirective","registerLicense","Scheduler","constructor","props","onPopupOpen","bind","args","type","element","querySelector","dialogObj","buttons","unshift","buttonModel","content","isPrimary","cssClass","click","convertToVisit","setProperties","eventData","ej2_instances","RecurrenceRule","console","log","JSON","stringify","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","popupOpen","option","services"],"sources":["C:/Users/User/Desktop/ClinicaDentalVersionFinal/Proyecto-Clinica-Dental/donto-react/src/Components/Scheduler/scheduler.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Inject, ScheduleComponent, Day, Week, Month,ViewsDirective,ViewDirective} from '@syncfusion/ej2-react-schedule';\r\nimport { registerLicense } from '@syncfusion/ej2-base';\r\n\r\nregisterLicense('Ngo9BigBOggjHTQxAR8/V1NHaF5cXmVCf1JpRGJGfV5yd0VEalxXTnVfUj0eQnxTdEZiWH9acXBVQGNcVU1+Vw==');\r\n\r\nclass Scheduler extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onPopupOpen = this.onPopupOpen.bind(this);\r\n  }\r\n\r\n  onPopupOpen(args) {\r\n    if (args.type === 'Editor' && !args.element.querySelector('.e-custom-btn')) {\r\n      const dialogObj = args.element['ej2_instances'][0];\r\n      let buttons = dialogObj.buttons;\r\n      buttons.unshift({\r\n        buttonModel: {\r\n          content: 'Convert',\r\n          isPrimary: false,\r\n          cssClass: 'e-custom-btn',\r\n        },\r\n        click: this.convertToVisit.bind(this, args),\r\n      });\r\n      dialogObj.setProperties({ buttons: buttons });\r\n    }\r\n  }\r\n\r\n  convertToVisit(args) {\r\n    // Get the data from the event editor\r\n    const eventData = args.element.querySelector('.e-schedule-form').ej2_instances[0].RecurrenceRule();\r\n\r\n    // Display the data in the console in JSON format\r\n    console.log(JSON.stringify(eventData, null, 2));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ScheduleComponent popupOpen={this.onPopupOpen}>\r\n\r\n        <ViewsDirective>\r\n              <ViewDirective option=\"Day\" />\r\n              <ViewDirective option=\"Week\" />\r\n             \r\n              <ViewDirective option=\"Month\" />\r\n            </ViewsDirective>\r\n          \r\n          <Inject services={[Day, Week, Month ]} />\r\n\r\n        </ScheduleComponent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scheduler;"],"mappings":"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"},"metadata":{},"sourceType":"module"}