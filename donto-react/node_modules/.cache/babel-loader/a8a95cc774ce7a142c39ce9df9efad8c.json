{"ast":null,"code":"import { createInstance, isUndefined, merge, extend, getValue } from './util';\n/**\r\n * Returns the Class Object\r\n *\r\n * @param {ClassObject} instance - instance of ClassObject\r\n * @param {string} curKey - key of the current instance\r\n * @param {Object} defaultValue - default Value\r\n * @param {Object[]} type ?\r\n * @returns {ClassObject} ?\r\n */\n// eslint-disable-next-line\nfunction getObject(instance, curKey, defaultValue, type) {\n  // eslint-disable-next-line\n  if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {\n    instance.properties[\"\" + curKey] = createInstance(type, [instance, curKey, defaultValue]);\n  }\n  return instance.properties[\"\" + curKey];\n}\n/**\r\n * Returns object array\r\n *\r\n * @param {ClassObject} instance ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} defaultValue ?\r\n * @param {Object} type ?\r\n * @param {boolean} isSetter ?\r\n * @param {boolean} isFactory ?\r\n * @returns {Object[]} ?\r\n */\n// eslint-disable-next-line\nfunction getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {\n  var result = [];\n  var len = defaultValue ? defaultValue.length : 0;\n  for (var i = 0; i < len; i++) {\n    var curType = type;\n    if (isFactory) {\n      curType = type(defaultValue[parseInt(i.toString(), 10)], instance);\n    }\n    if (isSetter) {\n      var inst = createInstance(curType, [instance, curKey, {}, true]);\n      inst.setProperties(defaultValue[parseInt(i.toString(), 10)], true);\n      result.push(inst);\n    } else {\n      result.push(createInstance(curType, [instance, curKey, defaultValue[parseInt(i.toString(), 10)], false]));\n    }\n  }\n  return result;\n}\n/**\r\n * Returns the properties of the object\r\n *\r\n * @param {Object} defaultValue ?\r\n * @param {string} curKey ?\r\n * @returns {void} ?\r\n */\nfunction propertyGetter(defaultValue, curKey) {\n  return function () {\n    // eslint-disable-next-line\n    if (!this.properties.hasOwnProperty(curKey)) {\n      this.properties[\"\" + curKey] = defaultValue;\n    }\n    return this.properties[\"\" + curKey];\n  };\n}\n/**\r\n * Set the properties for the object\r\n *\r\n * @param {Object} defaultValue ?\r\n * @param {string} curKey ?\r\n * @returns {void} ?\r\n */\nfunction propertySetter(defaultValue, curKey) {\n  return function (newValue) {\n    if (this.properties[\"\" + curKey] !== newValue) {\n      // eslint-disable-next-line\n      var oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n      this.saveChanges(curKey, newValue, oldVal);\n      this.properties[\"\" + curKey] = newValue;\n    }\n  };\n}\n/**\r\n * Returns complex objects\r\n *\r\n * @param {Object} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} type ?\r\n * @returns {void} ?\r\n */\n// eslint-disable-next-line\nfunction complexGetter(defaultValue, curKey, type) {\n  return function () {\n    return getObject(this, curKey, defaultValue, type);\n  };\n}\n/**\r\n * Sets complex objects\r\n *\r\n * @param {Object} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} type ?\r\n * @returns {void} ?\r\n */\nfunction complexSetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    getObject(this, curKey, defaultValue, type).setProperties(newValue);\n  };\n}\n/**\r\n *\r\n * @param {Object} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {FunctionConstructor} type ?\r\n * @returns {void} ?\r\n */\n// eslint-disable-next-line\nfunction complexFactoryGetter(defaultValue, curKey, type) {\n  return function () {\n    var curType = type({});\n    // eslint-disable-next-line\n    if (this.properties.hasOwnProperty(curKey)) {\n      return this.properties[\"\" + curKey];\n    } else {\n      return getObject(this, curKey, defaultValue, curType);\n    }\n  };\n}\n/**\r\n *\r\n * @param {Object} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} type ?\r\n * @returns {void} ?\r\n */\nfunction complexFactorySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    var curType = type(newValue, this);\n    getObject(this, curKey, defaultValue, curType).setProperties(newValue);\n  };\n}\n/**\r\n *\r\n * @param {Object[]} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} type ?\r\n * @returns {void} ?\r\n */\nfunction complexArrayGetter(defaultValue, curKey, type) {\n  return function () {\n    var _this = this;\n    // eslint-disable-next-line\n    if (!this.properties.hasOwnProperty(curKey)) {\n      var defCollection = getObjectArray(this, curKey, defaultValue, type, false);\n      this.properties[\"\" + curKey] = defCollection;\n    }\n    var ignore = this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch || this.ignoreCollectionWatch;\n    // eslint-disable-next-line\n    if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {\n      ['push', 'pop'].forEach(function (extendFunc) {\n        var descriptor = {\n          value: complexArrayDefinedCallback(extendFunc, curKey, type, _this.properties[\"\" + curKey]).bind(_this),\n          configurable: true\n        };\n        Object.defineProperty(_this.properties[\"\" + curKey], extendFunc, descriptor);\n      });\n    }\n    // eslint-disable-next-line\n    if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {\n      Object.defineProperty(this.properties[\"\" + curKey], 'isComplexArray', {\n        value: true\n      });\n    }\n    return this.properties[\"\" + curKey];\n  };\n}\n/**\r\n *\r\n * @param {Object[]} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} type ?\r\n * @returns {void} ?\r\n */\nfunction complexArraySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    this.isComplexArraySetter = true;\n    var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);\n    var newValCollection = getObjectArray(this, curKey, newValue, type, true);\n    this.isComplexArraySetter = false;\n    this.saveChanges(curKey, newValCollection, oldValueCollection);\n    this.properties[\"\" + curKey] = newValCollection;\n  };\n}\n/**\r\n *\r\n * @param {Object[]} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} type ?\r\n * @returns {void} ?\r\n */\nfunction complexArrayFactorySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    // eslint-disable-next-line\n    var oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n    var newValCollection = getObjectArray(this, curKey, newValue, type, true, true);\n    this.saveChanges(curKey, newValCollection, oldValueCollection);\n    this.properties[\"\" + curKey] = newValCollection;\n  };\n}\n/**\r\n *\r\n * @param {Object[]} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {FunctionConstructor} type ?\r\n * @returns {void} ?\r\n */\nfunction complexArrayFactoryGetter(defaultValue, curKey, type) {\n  return function () {\n    var curType = type({});\n    // eslint-disable-next-line\n    if (!this.properties.hasOwnProperty(curKey)) {\n      var defCollection = getObjectArray(this, curKey, defaultValue, curType, false);\n      this.properties[\"\" + curKey] = defCollection;\n    }\n    return this.properties[\"\" + curKey];\n  };\n}\n/**\r\n *\r\n * @param {string} dFunc ?\r\n * @param {string} curKey ?\r\n * @param {Object} type ?\r\n * @param {Object} prop ?\r\n * @returns {Object} ?\r\n */\nfunction complexArrayDefinedCallback(dFunc, curKey, type, prop) {\n  /* tslint:disable no-function-expression */\n  return function () {\n    var newValue = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      newValue[_i] = arguments[_i];\n    }\n    var keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';\n    switch (dFunc) {\n      case 'push':\n        for (var i = 0; i < newValue.length; i++) {\n          Array.prototype[\"\" + dFunc].apply(prop, [newValue[parseInt(i.toString(), 10)]]);\n          var model_1 = getArrayModel(keyString + (prop.length - 1), newValue[parseInt(i.toString(), 10)], !this.controlParent, dFunc);\n          this.serverDataBind(model_1, newValue[parseInt(i.toString(), 10)], false, dFunc);\n        }\n        break;\n      case 'pop':\n        Array.prototype[\"\" + dFunc].apply(prop);\n        // eslint-disable-next-line\n        var model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);\n        this.serverDataBind(model, {\n          ejsAction: 'pop'\n        }, false, dFunc);\n        break;\n    }\n    return prop;\n  };\n}\n/**\r\n *\r\n * @param {string} keyString ?\r\n * @param {Object} value ?\r\n * @param {boolean} isControlParent ?\r\n * @param {string} arrayFunction ?\r\n * @returns {Object} ?\r\n */\nfunction getArrayModel(keyString, value, isControlParent, arrayFunction) {\n  var modelObject = keyString;\n  if (isControlParent) {\n    modelObject = {};\n    modelObject[\"\" + keyString] = value;\n    if (value && typeof value === 'object') {\n      var action = 'ejsAction';\n      modelObject[\"\" + keyString][\"\" + action] = arrayFunction;\n    }\n  }\n  return modelObject;\n}\n// eslint-disable-next-line\n/**\r\n * Method used to create property. General syntax below.\r\n *\r\n * @param {Object} defaultValue - Specifies the default value of property.\r\n * @returns {PropertyDecorator} ?\r\n * ```\r\n * @Property('TypeScript')\r\n * propertyName: Type;\r\n * ```\r\n * @private\r\n */\nexport function Property(defaultValue) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: propertySetter(defaultValue, key),\n      get: propertyGetter(defaultValue, key),\n      enumerable: true,\n      configurable: true\n    };\n    //new property creation\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'prop', defaultValue);\n  };\n}\n/**\r\n * Method used to create complex property. General syntax below.\r\n *\r\n * @param  {any} defaultValue - Specifies the default value of property.\r\n * @param  {Function} type - Specifies the class type of complex object.\r\n * @returns {PropertyDecorator} ?\r\n * ```\r\n * @Complex<Type>({},Type)\r\n * propertyName: Type;\r\n * ```\r\n * @private\r\n */\nexport function Complex(defaultValue, type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexSetter(defaultValue, key, type),\n      get: complexGetter(defaultValue, key, type),\n      enumerable: true,\n      configurable: true\n    };\n    //new property creation\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'complexProp', defaultValue, type);\n  };\n}\n/**\r\n * Method used to create complex Factory property. General syntax below.\r\n *\r\n * @param  {Function} type - Specifies the class factory type of complex object.\r\n * @returns {PropertyDecorator} ?\r\n * ```\r\n * @ComplexFactory(defaultType, factoryFunction)\r\n * propertyName: Type1 | Type2;\r\n * ```\r\n * @private\r\n */\nexport function ComplexFactory(type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexFactorySetter({}, key, type),\n      get: complexFactoryGetter({}, key, type),\n      enumerable: true,\n      configurable: true\n    };\n    //new property creation\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'complexProp', {}, type);\n  };\n}\n/**\r\n * Method used to create complex array property. General syntax below.\r\n *\r\n * @param  {any} defaultValue - Specifies the default value of property.\r\n * @param  {Function} type - Specifies the class type of complex object.\r\n * @returns {PropertyDecorator} ?\r\n * ```\r\n * @Collection([], Type);\r\n * propertyName: Type;\r\n * ```\r\n * @private\r\n */\nexport function Collection(defaultValue, type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexArraySetter(defaultValue, key, type),\n      get: complexArrayGetter(defaultValue, key, type),\n      enumerable: true,\n      configurable: true\n    };\n    //new property creation\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'colProp', defaultValue, type);\n  };\n}\n/**\r\n * Method used to create complex factory array property. General syntax below.\r\n *\r\n * @param  {Function} type - Specifies the class type of complex object.\r\n * @returns {PropertyCollectionInfo} ?\r\n * ```\r\n * @Collection([], Type);\r\n * propertyName: Type;\r\n * ```\r\n * @private\r\n */\nexport function CollectionFactory(type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexArrayFactorySetter([], key, type),\n      get: complexArrayFactoryGetter([], key, type),\n      enumerable: true,\n      configurable: true\n    };\n    //new property creation\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'colProp', {}, type);\n  };\n}\n/**\r\n * Method used to create event property. General syntax below.\r\n *\r\n * @returns {PropertyDecorator} ?\r\n * ```\r\n * @Event(()=>{return true;})\r\n * ```\r\n * @private\r\n */\nexport function Event() {\n  return function (target, key) {\n    var eventDescriptor = {\n      set: function (newValue) {\n        var oldValue = this.properties[\"\" + key];\n        if (oldValue !== newValue) {\n          var finalContext = getParentContext(this, key);\n          if (isUndefined(oldValue) === false) {\n            finalContext.context.removeEventListener(finalContext.prefix, oldValue);\n          }\n          finalContext.context.addEventListener(finalContext.prefix, newValue);\n          this.properties[\"\" + key] = newValue;\n        }\n      },\n      get: propertyGetter(undefined, key),\n      enumerable: true,\n      configurable: true\n    };\n    Object.defineProperty(target, key, eventDescriptor);\n    addPropertyCollection(target, key, 'event');\n  };\n}\n/**\r\n * NotifyPropertyChanges is triggers the call back when the property has been changed.\r\n *\r\n * @param {Function} classConstructor ?\r\n * @returns {void} ?\r\n * ```\r\n *  @NotifyPropertyChanges\r\n * class DemoClass implements INotifyPropertyChanged {\r\n *\r\n *     @Property()\r\n *     property1: string;\r\n *\r\n *     dataBind: () => void;\r\n *\r\n *     constructor() { }\r\n *\r\n *     onPropertyChanged(newProp: any, oldProp: any) {\r\n *         // Called when property changed\r\n *     }\r\n * }\r\n * ```\r\n * @private\r\n */\n// eslint-disable-next-line\nexport function NotifyPropertyChanges(classConstructor) {\n  /** Need to code */\n}\n/**\r\n * Method  used to create the builderObject for the target component.\r\n *\r\n * @param {BuildInfo} target ?\r\n * @param {string} key ?\r\n * @param {string} propertyType ?\r\n * @param {Object} defaultValue ?\r\n * @param {Function} type ?\r\n * @returns {void} ?\r\n * @private\r\n */\nfunction addPropertyCollection(target, key, propertyType, defaultValue, type) {\n  if (isUndefined(target.propList)) {\n    target.propList = {\n      props: [],\n      complexProps: [],\n      colProps: [],\n      events: [],\n      propNames: [],\n      complexPropNames: [],\n      colPropNames: [],\n      eventNames: []\n    };\n  }\n  // eslint-disable-next-line\n  target.propList[propertyType + 's'].push({\n    propertyName: key,\n    defaultValue: defaultValue,\n    type: type\n  });\n  // eslint-disable-next-line\n  target.propList[propertyType + 'Names'].push(key);\n}\n/**\r\n * Returns an object containing the builder properties\r\n *\r\n * @param {Function} component ?\r\n * @returns {Object} ?\r\n * @private\r\n */\nfunction getBuilderProperties(component) {\n  if (isUndefined(component.prototype.builderObject)) {\n    component.prototype.builderObject = {\n      properties: {},\n      propCollections: [],\n      add: function () {\n        this.isPropertyArray = true;\n        this.propCollections.push(extend({}, this.properties, {}));\n      }\n    };\n    var rex = /complex/;\n    for (var _i = 0, _a = Object.keys(component.prototype.propList); _i < _a.length; _i++) {\n      var key = _a[_i];\n      var _loop_1 = function (prop) {\n        if (rex.test(key)) {\n          component.prototype.builderObject[prop.propertyName] = function (value) {\n            var childType = {};\n            merge(childType, getBuilderProperties(prop.type));\n            value(childType);\n            var tempValue;\n            if (!childType.isPropertyArray) {\n              tempValue = extend({}, childType.properties, {});\n            } else {\n              tempValue = childType.propCollections;\n            }\n            this.properties[prop.propertyName] = tempValue;\n            childType.properties = {};\n            childType.propCollections = [];\n            childType.isPropertyArray = false;\n            return this;\n          };\n        } else {\n          component.prototype.builderObject[prop.propertyName] = function (value) {\n            this.properties[prop.propertyName] = value;\n            return this;\n          };\n        }\n      };\n      for (var _b = 0, _c = component.prototype.propList[\"\" + key]; _b < _c.length; _b++) {\n        var prop = _c[_b];\n        _loop_1(prop);\n      }\n    }\n  }\n  return component.prototype.builderObject;\n}\n/**\r\n * Method used to create builder for the components\r\n *\r\n * @param {any} component -specifies the target component for which builder to be created.\r\n * @returns {Object} ?\r\n * @private\r\n */\nexport function CreateBuilder(component) {\n  var builderFunction = function (element) {\n    this.element = element;\n    return this;\n  };\n  var instanceFunction = function (element) {\n    // eslint-disable-next-line\n    if (!builderFunction.prototype.hasOwnProperty('create')) {\n      builderFunction.prototype = getBuilderProperties(component);\n      builderFunction.prototype.create = function () {\n        var temp = extend({}, {}, this.properties);\n        this.properties = {};\n        return new component(temp, this.element);\n      };\n    }\n    return new builderFunction(element);\n  };\n  return instanceFunction;\n}\n/**\r\n * Returns parent options for the object\r\n *\r\n * @param {Object} context ?\r\n * @param {string} prefix ?\r\n * @returns {ParentOption} ?\r\n * @private\r\n */\nfunction getParentContext(context, prefix) {\n  // eslint-disable-next-line\n  if (context.hasOwnProperty('parentObj') === false) {\n    return {\n      context: context,\n      prefix: prefix\n    };\n  } else {\n    var curText = getValue('propName', context);\n    if (curText) {\n      prefix = curText + '-' + prefix;\n    }\n    return getParentContext(getValue('parentObj', context), prefix);\n  }\n}","map":{"version":3,"names":["createInstance","isUndefined","merge","extend","getValue","getObject","instance","curKey","defaultValue","type","properties","hasOwnProperty","getObjectArray","isSetter","isFactory","result","len","length","i","curType","parseInt","toString","inst","setProperties","push","propertyGetter","propertySetter","newValue","oldVal","saveChanges","complexGetter","complexSetter","complexFactoryGetter","complexFactorySetter","complexArrayGetter","_this","defCollection","ignore","controlParent","undefined","ignoreCollectionWatch","forEach","extendFunc","descriptor","value","complexArrayDefinedCallback","bind","configurable","Object","defineProperty","complexArraySetter","isComplexArraySetter","oldValueCollection","newValCollection","complexArrayFactorySetter","complexArrayFactoryGetter","dFunc","prop","_i","arguments","keyString","propName","getParentKey","Array","prototype","apply","model_1","getArrayModel","serverDataBind","model","ejsAction","isControlParent","arrayFunction","modelObject","action","Property","target","key","propertyDescriptor","set","get","enumerable","addPropertyCollection","Complex","ComplexFactory","Collection","CollectionFactory","Event","eventDescriptor","oldValue","finalContext","getParentContext","context","removeEventListener","prefix","addEventListener","NotifyPropertyChanges","classConstructor","propertyType","propList","props","complexProps","colProps","events","propNames","complexPropNames","colPropNames","eventNames","propertyName","getBuilderProperties","component","builderObject","propCollections","add","isPropertyArray","rex","_a","keys","_loop_1","test","childType","tempValue","_b","_c","CreateBuilder","builderFunction","element","instanceFunction","create","temp","curText"],"sources":["C:/Users/User/Desktop/ClinicaDentalVersionFinal/Proyecto-Clinica-Dental/donto-react/node_modules/@syncfusion/ej2-base/src/notify-property-change.js"],"sourcesContent":["import { createInstance, isUndefined, merge, extend, getValue } from './util';\r\n/**\r\n * Returns the Class Object\r\n *\r\n * @param {ClassObject} instance - instance of ClassObject\r\n * @param {string} curKey - key of the current instance\r\n * @param {Object} defaultValue - default Value\r\n * @param {Object[]} type ?\r\n * @returns {ClassObject} ?\r\n */\r\n// eslint-disable-next-line\r\nfunction getObject(instance, curKey, defaultValue, type) {\r\n    // eslint-disable-next-line\r\n    if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {\r\n        instance.properties[\"\" + curKey] = createInstance(type, [instance, curKey, defaultValue]);\r\n    }\r\n    return instance.properties[\"\" + curKey];\r\n}\r\n/**\r\n * Returns object array\r\n *\r\n * @param {ClassObject} instance ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} defaultValue ?\r\n * @param {Object} type ?\r\n * @param {boolean} isSetter ?\r\n * @param {boolean} isFactory ?\r\n * @returns {Object[]} ?\r\n */\r\n// eslint-disable-next-line\r\nfunction getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {\r\n    var result = [];\r\n    var len = defaultValue ? defaultValue.length : 0;\r\n    for (var i = 0; i < len; i++) {\r\n        var curType = type;\r\n        if (isFactory) {\r\n            curType = type(defaultValue[parseInt(i.toString(), 10)], instance);\r\n        }\r\n        if (isSetter) {\r\n            var inst = createInstance(curType, [instance, curKey, {}, true]);\r\n            inst.setProperties(defaultValue[parseInt(i.toString(), 10)], true);\r\n            result.push(inst);\r\n        }\r\n        else {\r\n            result.push(createInstance(curType, [instance, curKey, defaultValue[parseInt(i.toString(), 10)], false]));\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Returns the properties of the object\r\n *\r\n * @param {Object} defaultValue ?\r\n * @param {string} curKey ?\r\n * @returns {void} ?\r\n */\r\nfunction propertyGetter(defaultValue, curKey) {\r\n    return function () {\r\n        // eslint-disable-next-line\r\n        if (!this.properties.hasOwnProperty(curKey)) {\r\n            this.properties[\"\" + curKey] = defaultValue;\r\n        }\r\n        return this.properties[\"\" + curKey];\r\n    };\r\n}\r\n/**\r\n * Set the properties for the object\r\n *\r\n * @param {Object} defaultValue ?\r\n * @param {string} curKey ?\r\n * @returns {void} ?\r\n */\r\nfunction propertySetter(defaultValue, curKey) {\r\n    return function (newValue) {\r\n        if (this.properties[\"\" + curKey] !== newValue) {\r\n            // eslint-disable-next-line\r\n            var oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\r\n            this.saveChanges(curKey, newValue, oldVal);\r\n            this.properties[\"\" + curKey] = newValue;\r\n        }\r\n    };\r\n}\r\n/**\r\n * Returns complex objects\r\n *\r\n * @param {Object} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} type ?\r\n * @returns {void} ?\r\n */\r\n// eslint-disable-next-line\r\nfunction complexGetter(defaultValue, curKey, type) {\r\n    return function () {\r\n        return getObject(this, curKey, defaultValue, type);\r\n    };\r\n}\r\n/**\r\n * Sets complex objects\r\n *\r\n * @param {Object} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} type ?\r\n * @returns {void} ?\r\n */\r\nfunction complexSetter(defaultValue, curKey, type) {\r\n    return function (newValue) {\r\n        getObject(this, curKey, defaultValue, type).setProperties(newValue);\r\n    };\r\n}\r\n/**\r\n *\r\n * @param {Object} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {FunctionConstructor} type ?\r\n * @returns {void} ?\r\n */\r\n// eslint-disable-next-line\r\nfunction complexFactoryGetter(defaultValue, curKey, type) {\r\n    return function () {\r\n        var curType = type({});\r\n        // eslint-disable-next-line\r\n        if (this.properties.hasOwnProperty(curKey)) {\r\n            return this.properties[\"\" + curKey];\r\n        }\r\n        else {\r\n            return getObject(this, curKey, defaultValue, curType);\r\n        }\r\n    };\r\n}\r\n/**\r\n *\r\n * @param {Object} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} type ?\r\n * @returns {void} ?\r\n */\r\nfunction complexFactorySetter(defaultValue, curKey, type) {\r\n    return function (newValue) {\r\n        var curType = type(newValue, this);\r\n        getObject(this, curKey, defaultValue, curType).setProperties(newValue);\r\n    };\r\n}\r\n/**\r\n *\r\n * @param {Object[]} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} type ?\r\n * @returns {void} ?\r\n */\r\nfunction complexArrayGetter(defaultValue, curKey, type) {\r\n    return function () {\r\n        var _this = this;\r\n        // eslint-disable-next-line\r\n        if (!this.properties.hasOwnProperty(curKey)) {\r\n            var defCollection = getObjectArray(this, curKey, defaultValue, type, false);\r\n            this.properties[\"\" + curKey] = defCollection;\r\n        }\r\n        var ignore = ((this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch)\r\n            || this.ignoreCollectionWatch);\r\n        // eslint-disable-next-line\r\n        if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {\r\n            ['push', 'pop'].forEach(function (extendFunc) {\r\n                var descriptor = {\r\n                    value: complexArrayDefinedCallback(extendFunc, curKey, type, _this.properties[\"\" + curKey]).bind(_this),\r\n                    configurable: true\r\n                };\r\n                Object.defineProperty(_this.properties[\"\" + curKey], extendFunc, descriptor);\r\n            });\r\n        }\r\n        // eslint-disable-next-line\r\n        if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {\r\n            Object.defineProperty(this.properties[\"\" + curKey], 'isComplexArray', { value: true });\r\n        }\r\n        return this.properties[\"\" + curKey];\r\n    };\r\n}\r\n/**\r\n *\r\n * @param {Object[]} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} type ?\r\n * @returns {void} ?\r\n */\r\nfunction complexArraySetter(defaultValue, curKey, type) {\r\n    return function (newValue) {\r\n        this.isComplexArraySetter = true;\r\n        var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);\r\n        var newValCollection = getObjectArray(this, curKey, newValue, type, true);\r\n        this.isComplexArraySetter = false;\r\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\r\n        this.properties[\"\" + curKey] = newValCollection;\r\n    };\r\n}\r\n/**\r\n *\r\n * @param {Object[]} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {Object[]} type ?\r\n * @returns {void} ?\r\n */\r\nfunction complexArrayFactorySetter(defaultValue, curKey, type) {\r\n    return function (newValue) {\r\n        // eslint-disable-next-line\r\n        var oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\r\n        var newValCollection = getObjectArray(this, curKey, newValue, type, true, true);\r\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\r\n        this.properties[\"\" + curKey] = newValCollection;\r\n    };\r\n}\r\n/**\r\n *\r\n * @param {Object[]} defaultValue ?\r\n * @param {string} curKey ?\r\n * @param {FunctionConstructor} type ?\r\n * @returns {void} ?\r\n */\r\nfunction complexArrayFactoryGetter(defaultValue, curKey, type) {\r\n    return function () {\r\n        var curType = type({});\r\n        // eslint-disable-next-line\r\n        if (!this.properties.hasOwnProperty(curKey)) {\r\n            var defCollection = getObjectArray(this, curKey, defaultValue, curType, false);\r\n            this.properties[\"\" + curKey] = defCollection;\r\n        }\r\n        return this.properties[\"\" + curKey];\r\n    };\r\n}\r\n/**\r\n *\r\n * @param {string} dFunc ?\r\n * @param {string} curKey ?\r\n * @param {Object} type ?\r\n * @param {Object} prop ?\r\n * @returns {Object} ?\r\n */\r\nfunction complexArrayDefinedCallback(dFunc, curKey, type, prop) {\r\n    /* tslint:disable no-function-expression */\r\n    return function () {\r\n        var newValue = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            newValue[_i] = arguments[_i];\r\n        }\r\n        var keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';\r\n        switch (dFunc) {\r\n            case 'push':\r\n                for (var i = 0; i < newValue.length; i++) {\r\n                    Array.prototype[\"\" + dFunc].apply(prop, [newValue[parseInt(i.toString(), 10)]]);\r\n                    var model_1 = getArrayModel(keyString + (prop.length - 1), newValue[parseInt(i.toString(), 10)], !this.controlParent, dFunc);\r\n                    this.serverDataBind(model_1, newValue[parseInt(i.toString(), 10)], false, dFunc);\r\n                }\r\n                break;\r\n            case 'pop':\r\n                Array.prototype[\"\" + dFunc].apply(prop);\r\n                // eslint-disable-next-line\r\n                var model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);\r\n                this.serverDataBind(model, { ejsAction: 'pop' }, false, dFunc);\r\n                break;\r\n        }\r\n        return prop;\r\n    };\r\n}\r\n/**\r\n *\r\n * @param {string} keyString ?\r\n * @param {Object} value ?\r\n * @param {boolean} isControlParent ?\r\n * @param {string} arrayFunction ?\r\n * @returns {Object} ?\r\n */\r\nfunction getArrayModel(keyString, value, isControlParent, arrayFunction) {\r\n    var modelObject = keyString;\r\n    if (isControlParent) {\r\n        modelObject = {};\r\n        modelObject[\"\" + keyString] = value;\r\n        if (value && typeof value === 'object') {\r\n            var action = 'ejsAction';\r\n            modelObject[\"\" + keyString][\"\" + action] = arrayFunction;\r\n        }\r\n    }\r\n    return modelObject;\r\n}\r\n// eslint-disable-next-line\r\n/**\r\n * Method used to create property. General syntax below.\r\n *\r\n * @param {Object} defaultValue - Specifies the default value of property.\r\n * @returns {PropertyDecorator} ?\r\n * ```\r\n * @Property('TypeScript')\r\n * propertyName: Type;\r\n * ```\r\n * @private\r\n */\r\nexport function Property(defaultValue) {\r\n    return function (target, key) {\r\n        var propertyDescriptor = {\r\n            set: propertySetter(defaultValue, key),\r\n            get: propertyGetter(defaultValue, key),\r\n            enumerable: true,\r\n            configurable: true\r\n        };\r\n        //new property creation\r\n        Object.defineProperty(target, key, propertyDescriptor);\r\n        addPropertyCollection(target, key, 'prop', defaultValue);\r\n    };\r\n}\r\n/**\r\n * Method used to create complex property. General syntax below.\r\n *\r\n * @param  {any} defaultValue - Specifies the default value of property.\r\n * @param  {Function} type - Specifies the class type of complex object.\r\n * @returns {PropertyDecorator} ?\r\n * ```\r\n * @Complex<Type>({},Type)\r\n * propertyName: Type;\r\n * ```\r\n * @private\r\n */\r\nexport function Complex(defaultValue, type) {\r\n    return function (target, key) {\r\n        var propertyDescriptor = {\r\n            set: complexSetter(defaultValue, key, type),\r\n            get: complexGetter(defaultValue, key, type),\r\n            enumerable: true,\r\n            configurable: true\r\n        };\r\n        //new property creation\r\n        Object.defineProperty(target, key, propertyDescriptor);\r\n        addPropertyCollection(target, key, 'complexProp', defaultValue, type);\r\n    };\r\n}\r\n/**\r\n * Method used to create complex Factory property. General syntax below.\r\n *\r\n * @param  {Function} type - Specifies the class factory type of complex object.\r\n * @returns {PropertyDecorator} ?\r\n * ```\r\n * @ComplexFactory(defaultType, factoryFunction)\r\n * propertyName: Type1 | Type2;\r\n * ```\r\n * @private\r\n */\r\nexport function ComplexFactory(type) {\r\n    return function (target, key) {\r\n        var propertyDescriptor = {\r\n            set: complexFactorySetter({}, key, type),\r\n            get: complexFactoryGetter({}, key, type),\r\n            enumerable: true,\r\n            configurable: true\r\n        };\r\n        //new property creation\r\n        Object.defineProperty(target, key, propertyDescriptor);\r\n        addPropertyCollection(target, key, 'complexProp', {}, type);\r\n    };\r\n}\r\n/**\r\n * Method used to create complex array property. General syntax below.\r\n *\r\n * @param  {any} defaultValue - Specifies the default value of property.\r\n * @param  {Function} type - Specifies the class type of complex object.\r\n * @returns {PropertyDecorator} ?\r\n * ```\r\n * @Collection([], Type);\r\n * propertyName: Type;\r\n * ```\r\n * @private\r\n */\r\nexport function Collection(defaultValue, type) {\r\n    return function (target, key) {\r\n        var propertyDescriptor = {\r\n            set: complexArraySetter(defaultValue, key, type),\r\n            get: complexArrayGetter(defaultValue, key, type),\r\n            enumerable: true,\r\n            configurable: true\r\n        };\r\n        //new property creation\r\n        Object.defineProperty(target, key, propertyDescriptor);\r\n        addPropertyCollection(target, key, 'colProp', defaultValue, type);\r\n    };\r\n}\r\n/**\r\n * Method used to create complex factory array property. General syntax below.\r\n *\r\n * @param  {Function} type - Specifies the class type of complex object.\r\n * @returns {PropertyCollectionInfo} ?\r\n * ```\r\n * @Collection([], Type);\r\n * propertyName: Type;\r\n * ```\r\n * @private\r\n */\r\nexport function CollectionFactory(type) {\r\n    return function (target, key) {\r\n        var propertyDescriptor = {\r\n            set: complexArrayFactorySetter([], key, type),\r\n            get: complexArrayFactoryGetter([], key, type),\r\n            enumerable: true,\r\n            configurable: true\r\n        };\r\n        //new property creation\r\n        Object.defineProperty(target, key, propertyDescriptor);\r\n        addPropertyCollection(target, key, 'colProp', {}, type);\r\n    };\r\n}\r\n/**\r\n * Method used to create event property. General syntax below.\r\n *\r\n * @returns {PropertyDecorator} ?\r\n * ```\r\n * @Event(()=>{return true;})\r\n * ```\r\n * @private\r\n */\r\nexport function Event() {\r\n    return function (target, key) {\r\n        var eventDescriptor = {\r\n            set: function (newValue) {\r\n                var oldValue = this.properties[\"\" + key];\r\n                if (oldValue !== newValue) {\r\n                    var finalContext = getParentContext(this, key);\r\n                    if (isUndefined(oldValue) === false) {\r\n                        finalContext.context.removeEventListener(finalContext.prefix, oldValue);\r\n                    }\r\n                    finalContext.context.addEventListener(finalContext.prefix, newValue);\r\n                    this.properties[\"\" + key] = newValue;\r\n                }\r\n            },\r\n            get: propertyGetter(undefined, key),\r\n            enumerable: true,\r\n            configurable: true\r\n        };\r\n        Object.defineProperty(target, key, eventDescriptor);\r\n        addPropertyCollection(target, key, 'event');\r\n    };\r\n}\r\n/**\r\n * NotifyPropertyChanges is triggers the call back when the property has been changed.\r\n *\r\n * @param {Function} classConstructor ?\r\n * @returns {void} ?\r\n * ```\r\n *  @NotifyPropertyChanges\r\n * class DemoClass implements INotifyPropertyChanged {\r\n *\r\n *     @Property()\r\n *     property1: string;\r\n *\r\n *     dataBind: () => void;\r\n *\r\n *     constructor() { }\r\n *\r\n *     onPropertyChanged(newProp: any, oldProp: any) {\r\n *         // Called when property changed\r\n *     }\r\n * }\r\n * ```\r\n * @private\r\n */\r\n// eslint-disable-next-line\r\nexport function NotifyPropertyChanges(classConstructor) {\r\n    /** Need to code */\r\n}\r\n/**\r\n * Method  used to create the builderObject for the target component.\r\n *\r\n * @param {BuildInfo} target ?\r\n * @param {string} key ?\r\n * @param {string} propertyType ?\r\n * @param {Object} defaultValue ?\r\n * @param {Function} type ?\r\n * @returns {void} ?\r\n * @private\r\n */\r\nfunction addPropertyCollection(target, key, propertyType, defaultValue, type) {\r\n    if (isUndefined(target.propList)) {\r\n        target.propList = {\r\n            props: [],\r\n            complexProps: [],\r\n            colProps: [],\r\n            events: [],\r\n            propNames: [],\r\n            complexPropNames: [],\r\n            colPropNames: [],\r\n            eventNames: []\r\n        };\r\n    }\r\n    // eslint-disable-next-line\r\n    target.propList[propertyType + 's'].push({\r\n        propertyName: key,\r\n        defaultValue: defaultValue,\r\n        type: type\r\n    });\r\n    // eslint-disable-next-line\r\n    target.propList[propertyType + 'Names'].push(key);\r\n}\r\n/**\r\n * Returns an object containing the builder properties\r\n *\r\n * @param {Function} component ?\r\n * @returns {Object} ?\r\n * @private\r\n */\r\nfunction getBuilderProperties(component) {\r\n    if (isUndefined(component.prototype.builderObject)) {\r\n        component.prototype.builderObject = {\r\n            properties: {}, propCollections: [], add: function () {\r\n                this.isPropertyArray = true;\r\n                this.propCollections.push(extend({}, this.properties, {}));\r\n            }\r\n        };\r\n        var rex = /complex/;\r\n        for (var _i = 0, _a = Object.keys(component.prototype.propList); _i < _a.length; _i++) {\r\n            var key = _a[_i];\r\n            var _loop_1 = function (prop) {\r\n                if (rex.test(key)) {\r\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\r\n                        var childType = {};\r\n                        merge(childType, getBuilderProperties(prop.type));\r\n                        value(childType);\r\n                        var tempValue;\r\n                        if (!childType.isPropertyArray) {\r\n                            tempValue = extend({}, childType.properties, {});\r\n                        }\r\n                        else {\r\n                            tempValue = childType.propCollections;\r\n                        }\r\n                        this.properties[prop.propertyName] = tempValue;\r\n                        childType.properties = {};\r\n                        childType.propCollections = [];\r\n                        childType.isPropertyArray = false;\r\n                        return this;\r\n                    };\r\n                }\r\n                else {\r\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\r\n                        this.properties[prop.propertyName] = value;\r\n                        return this;\r\n                    };\r\n                }\r\n            };\r\n            for (var _b = 0, _c = component.prototype.propList[\"\" + key]; _b < _c.length; _b++) {\r\n                var prop = _c[_b];\r\n                _loop_1(prop);\r\n            }\r\n        }\r\n    }\r\n    return component.prototype.builderObject;\r\n}\r\n/**\r\n * Method used to create builder for the components\r\n *\r\n * @param {any} component -specifies the target component for which builder to be created.\r\n * @returns {Object} ?\r\n * @private\r\n */\r\nexport function CreateBuilder(component) {\r\n    var builderFunction = function (element) {\r\n        this.element = element;\r\n        return this;\r\n    };\r\n    var instanceFunction = function (element) {\r\n        // eslint-disable-next-line\r\n        if (!builderFunction.prototype.hasOwnProperty('create')) {\r\n            builderFunction.prototype = getBuilderProperties(component);\r\n            builderFunction.prototype.create = function () {\r\n                var temp = extend({}, {}, this.properties);\r\n                this.properties = {};\r\n                return new component(temp, this.element);\r\n            };\r\n        }\r\n        return new builderFunction(element);\r\n    };\r\n    return instanceFunction;\r\n}\r\n/**\r\n * Returns parent options for the object\r\n *\r\n * @param {Object} context ?\r\n * @param {string} prefix ?\r\n * @returns {ParentOption} ?\r\n * @private\r\n */\r\nfunction getParentContext(context, prefix) {\r\n    // eslint-disable-next-line\r\n    if (context.hasOwnProperty('parentObj') === false) {\r\n        return { context: context, prefix: prefix };\r\n    }\r\n    else {\r\n        var curText = getValue('propName', context);\r\n        if (curText) {\r\n            prefix = curText + '-' + prefix;\r\n        }\r\n        return getParentContext(getValue('parentObj', context), prefix);\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}